BEGINNER'S GUIDE TO THE BASH TERMINAL (11082020)

my username@computer name: $ means that I am a standar user (no privilegies)
ls - list storage
pwd: print present working directory (where I am = /home/lusancal)
ls -a : lists all the files including the hiden files (.document)
ls -l: long list of files with more info about each element
ls -lh: = info that ls -l but this info is for humans (file size in Kb or Mb instead of bytes)

cd Documents/ : change directory. Move to the folder called Documents
cd : takes you to the home directory
cd .. : moves 1 folder up

pushd /Downloads : to move to the Downloads directory
popd: to go back to the last directory that we were before. We do not need to remember where we were before.

Linux does not need that we type the extensions
file .face shows what type of file is the .face doc is. Ex. JPG image

TO FIND FILES:
locate asig : It shows all the file names with that string.

which cal: finds other commands for me, ex. cal. It shows it is installed and
where it is.  ex. /usr/bin/cal
If we then type cal and Enter we will run the command and we will see this month's
calendar on the screen.

HISTORY: shows all the commands that I have used. 
1st option: up arrow
2nd option: history + ENTER

HELP:
whatis cal: shows what a commands does.
lusancal@ATLANTIDA:~$ whatis cal
cal (1)              - displays a calendar and the date of Easter

apropos time : if we do not know what command ot use to make something
 related to time. It shows lots of differnt commands related to time

man man:  man - an interface to the system reference manuals

+++minute 25+++

CREATE NEW DIRECTORIES & FILES:
mkdir Test1 Test2 Test3:  we can create more than 1 directory all at one.
touch existing_file: it updates the date on that file, ex. to backup a file.
touch new_file_name new_file_name: it creates new files

TIP: ALtGran + 4= ~ in a Spanish keyboard

COPY FILES:

cp ~/Documentos/NetNinja_CSS_HTML_Crash_Course/about2.html about3.html: to cpoy it in a different folder
cp about3.html about4.html (copy file in same folder. The copyÅ› name is about4.html)

MOVE & REMOVE FILES AND DIRECTORIES
mv : move and rename files. If we move a file to another file the file will disappear
and its content will be added to the 2nd file. Ex. mv lucia.txt  ~/Documents/

rm: remove. No possible to retrieve it -> BE CAREFUL
rm file1 / rm * (delete all the files of a folder) / rm file* (delete any file that 
starts with the word file
rm * does not delete subdirectories -> rm -r foldername; delete subdirectories

rmdir: only removes empty directories ex. rmdir * 
Ex. rmdir: failed to remove 'dir1': Directory not empty
    rmdir: failed to remove 'lucia.txt': Not a directory

** TEXT FILES ***
cat print the content of a file on the screen.
cat >> file2 : means anything that cat has, add it to file2. If we start typing some text,
we must end the text with Control+D. Then if we type cat file2 we will see that text inside 
that file.
cat file1 file2 : print the content of both files but the files remain the same.


more & less

more file1: pages the content of a file
less file1: more + more things. Not only pages the file, it also allows us to search text..
Q allows us to exit the less command and the file.

### EDIT FILES ###
nano file1: nano is a very easy and powerful text editor for LINUX.
Control+O and ENTER to save the changes. if it's a new file name, it'll save that new file.
Control+X to exit the file.
cat file1 will show the file with those changes.

Redirection: cat > file2 (adds the new text to an existing file and removes the old text). 
cat >> file2 (adds text to a file. It does not replace the old text). 
We type text and Control+D to finish typing.

ls -al / > newfile.text (system will add the list of all the elements in the root directory to
 a new file called newfile.text

##### USERS #####

sudo: to give administrator privileges to an user temporaley.
sudo -s: it allows me to be the root user for a limited amount of time without asking for 
the password each time I use a command. 
exit : allows me to go back to my user. It's safer to use my user with the sudo command.
su - otherusername: to move to other user's documents and navegate his/her files. 
We will need the that user's password to access his/her files.

users: shows who is connected to the system at that time.

id: shows iformation about my account.

### FILE PERMISSIONS ###

drwxrwxrwx 1 lus lus  512 Aug 17 23:08 dir1
-rw-rw-rw- 1 lus lus 1297 Aug 19 14:24 listout.txt
-rw-rw-rw- 1 lus lus   40 Aug 19 13:39 lu.txt

PERMISSIONS - OWNER (lus) - GROUP (lus) - SIZE - LAST MODIFICATION DATE - FILE NAME

1st letter: d (directory) or - (file)
2nd to 4th letter: user's permissions. rwx
5th to 7th letter: group's permissions. rwx
8th to 10th letter: everyone's permissions. rwx
r = 4 (read it) - W =2 (modify and delete the file) - x = 1(execute that file).

We can modify those permissions.
chmod +x file1.txt : make the file executable for all the users
Another option is to use the numbers to make it easier to remember.

chmod 744 file1.txt -> means that the owner has all the permissions and the other groups 
only had the read permission.

chmod 766 file1.txt -> -rwxrw-rw-

chmod 700 file1.txt -> -rwx-------

chmod 644 file1.txt -rw-r--r-- = chmod 755 dir1. Without the x permission the other 
users won't be able to see that folder

Directories and Files manage permissions differently.

HOW TO KILL COMMANDS
For example: watch free -h -> shows the free memory that we have in the ovmputer and it gets updated
every few seconds. To kill that process we press Control+C 

If a program that we opened like Firefox is not working properly, we can kill it
with the command: killall firefox
If we are not sure about the name we may use: which google-chrome
then the system will show the name correctly and they we may use the command killall google-chrome

TIP: Control+L: to clean the screen

## CLOSE A BASH TERMINAL ##
exit 
